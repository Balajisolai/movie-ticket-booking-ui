{"version":3,"sources":["components/Header/index.js","components/MovieTile/index.js","components/Home/actions.types.js","components/SeatSelection/actions.types.js","components/Home/index.js","components/Home/actions.js","components/SeatSelection/actions.js","components/MovieDetail/index.js","components/Seat/index.js","components/SeatSelection/index.js","routes/index.js","components/Home/reducer.js","components/SeatSelection/reducer.js","mainReducer.js","constants.js","components/Home/saga.js","components/SeatSelection/saga.js","rootSaga.js","App.js","index.js"],"names":["Header","props","className","MovieTile","title","poster","actors","onMovieClick","imgStyle","backgroundImage","onClick","style","HomeActions","FETCH_MOVIES","FETCH_MOVIES_SUCCESS","FETCH_MOVIES_FAILURE","SET_SELECTED_MOVIE","SelectionActions","SET_SELECTED_VENUE","SET_SELECTED_SEATS","FETCH_VENUES","FETCH_VENUES_SUCCESS","FETCH_VENUES_FAILURE","FETCH_AVAILABILITIES","FETCH_AVAILABILITIES_SUCCESS","FETCH_AVAILABILITIES_FAILURE","MODIFY_AVAILABILITIES","MODIFY_AVAILABILITIES_SUCCESS","MODIFY_AVAILABILITIES_FAILURE","withRouter","connect","state","loading","homeReducer","allMovies","apiError","error","dispatch","fetchMovies","type","setSelectedMovie","data","payload","history","useEffect","map","movie","push","_id","selectionReducer","selectedMovie","selectedVenue","allVenues","fetchVenues","setSelectedVenue","useState","currentVenue","setVenue","returnVenueStyle","venue","backgroundColor","color","border","buttonColor","rated","runtime","plot","onVenueSelection","seatColors","empty","selected","reserved","locked","Seat","status","seatStatus","setStatus","seatStyle","onSeatClick","allSeats","selectedSeats","totalCost","isBookingComplete","fetchAvailabilities","setSelectedSeats","lockSelectedSeats","releaseSelectedSeats","bookSelectedSeats","isModalOpen","openModal","PaymentModal","React","lazy","fallback","modalIsOpen","closeModal","onPayClick","amount","isLoading","seat","seatNumber","seat_number","disabled","Routes","exact","path","initialState","mainReducer","combineReducers","action","newSeatsArray","includes","splice","indexOf","newCost","length","cost","BASE_URL","homeSaga","fetch","then","res","json","apiResult","put","takeEvery","modifyAvailabilities","select","movie_id","movieId","reqBody","venueName","seatNumbers","newStatus","JSON","stringify","method","headers","body","result","rootSaga","all","selectionSaga","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","App","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cb633ba.chunk.js","sourcesContent":["import './index.css';\n\nconst Header = (props) => {\n    return (\n        <>\n            <header>Movie Ticket Booking</header>\n            <div className=\"subHeading\">The best of entertainment for you</div>\n        </>\n    )\n};\n\nexport default Header;","import './index.css';\n\nconst MovieTile = (props) => {\n    const { title, poster, actors, onMovieClick } = props;\n\n    const imgStyle = {\n        backgroundImage: `url(${poster})`\n    }\n\n    return (\n        <div className=\"tileContainer\" onClick={onMovieClick}>\n            <div className=\"tileContent\" style={imgStyle} />\n            <div>{title}</div>\n            <div className=\"actorsText\">{actors}</div>\n        </div>\n    )\n};\n\nexport default MovieTile;","const HomeActions = {\n    FETCH_MOVIES: \"FETCH_MOVIES\",\n    FETCH_MOVIES_SUCCESS: \"FETCH_MOVIES_SUCCESS\",\n    FETCH_MOVIES_FAILURE: \"FETCH_MOVIES_FAILURE\",\n    SET_SELECTED_MOVIE: \"SET_SELECTED_MOVIE\",\n};\n\nexport default HomeActions;","const SelectionActions = {\n    SET_SELECTED_MOVIE: \"SET_SELECTED_MOVIE\",\n    SET_SELECTED_VENUE: \"SET_SELECTED_VENUE\",\n    SET_SELECTED_SEATS: \"SET_SELECTED_SEATS\",\n    FETCH_VENUES: \"FETCH_VENUES\",\n    FETCH_VENUES_SUCCESS: \"FETCH_VENUES_SUCCESS\",\n    FETCH_VENUES_FAILURE: \"FETCH_VENUES_FAILURE\",\n    FETCH_AVAILABILITIES: \"FETCH_AVAILABILITIES\",\n    FETCH_AVAILABILITIES_SUCCESS: \"FETCH_AVAILABILITIES_SUCCESS\",\n    FETCH_AVAILABILITIES_FAILURE: \"FETCH_AVAILABILITIES_FAILURE\",\n    MODIFY_AVAILABILITIES: \"MODIFY_AVAILABILITIES\",\n    MODIFY_AVAILABILITIES_SUCCESS: \"MODIFY_AVAILABILITIES_SUCCESS\",\n    MODIFY_AVAILABILITIES_FAILURE: \"MODIFY_AVAILABILITIES_FAILURE\"\n};\n\nexport default SelectionActions;","import { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\n\nimport './index.css';\n\nimport Header from '../Header';\nimport MovieTile from '../MovieTile'\nimport { fetchMovies } from './actions';\nimport { setSelectedMovie } from '../SeatSelection/actions';\n\nfunction Home({ fetchMovies, allMovies, history, loading, apiError, setSelectedMovie }) {\n\n    useEffect(() => {\n        fetchMovies();\n    }, []);\n\n    const showMovieInfo = (selectedMovie) => {\n        setSelectedMovie(selectedMovie);\n        history.push('/movie-ticket-booking-ui/details');\n    }\n\n    const renderMovies = () => {\n        return allMovies.map((movie) => <MovieTile key={movie._id} {...movie} onMovieClick={() => showMovieInfo(movie)} />);\n    }\n\n    return (\n        <div>\n            <Header />\n            <div className=\"home-bodyTitle\">Which movie would you like to see today?</div>\n            {loading ? <div className=\"home-msg\">Loading...</div> :\n                apiError ? <div className=\"home-msg\">An error occurred. Please try after some time.</div> :\n                    <div className=\"home-tilesParent\">\n                        {renderMovies()}\n                    </div>\n            }\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.homeReducer.loading,\n        allMovies: state.homeReducer.allMovies,\n        apiError: state.homeReducer.error,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchMovies: () => dispatch(fetchMovies()),\n        setSelectedMovie: (data) => dispatch(setSelectedMovie(data)),\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home))\n","import HomeActions from './actions.types';\n\nexport function fetchMovies() {\n    return {\n        type: HomeActions.FETCH_MOVIES\n    }\n}\n\nexport function fetchMoviesSuccess(data) {\n    return {\n        type: HomeActions.FETCH_MOVIES_SUCCESS,\n        payload: data\n    }\n}","import SelectionActions from './actions.types';\n\nexport function setSelectedMovie(data) {\n    return {\n        type: SelectionActions.SET_SELECTED_MOVIE,\n        payload: data\n    }\n}\n\nexport function setSelectedVenue(data) {\n    return {\n        type: SelectionActions.SET_SELECTED_VENUE,\n        payload: data\n    }\n}\n\nexport function setSelectedSeats(data) {\n    return {\n        type: SelectionActions.SET_SELECTED_SEATS,\n        payload: data\n    }\n}\n\nexport function fetchVenues() {\n    return {\n        type: SelectionActions.FETCH_VENUES\n    }\n}\n\nexport function fetchVenuesSuccess(data) {\n    return {\n        type: SelectionActions.FETCH_VENUES_SUCCESS,\n        payload: data\n    }\n}\n\nexport function fetchVenuesFailure(data) {\n    return {\n        type: SelectionActions.FETCH_VENUES_FAILURE,\n        payload: data\n    }\n}\n\nexport function fetchAvailabilities(data) {\n    return {\n        type: SelectionActions.FETCH_AVAILABILITIES,\n        payload: data\n    }\n}\n\nexport function fetchAvailabilitiesSuccess(data) {\n    return {\n        type: SelectionActions.FETCH_AVAILABILITIES_SUCCESS,\n        payload: data\n    }\n}\n\nexport function fetchAvailabilitiesFailure(data) {\n    return {\n        type: SelectionActions.FETCH_AVAILABILITIES_FAILURE,\n        payload: data\n    }\n}\n\nexport function lockSelectedSeats() {\n    return {\n        type: SelectionActions.MODIFY_AVAILABILITIES,\n        payload: 'locked'\n    }\n}\n\nexport function releaseSelectedSeats() {\n    return {\n        type: SelectionActions.MODIFY_AVAILABILITIES,\n        payload: 'empty'\n    }\n}\n\nexport function bookSelectedSeats() {\n    return {\n        type: SelectionActions.MODIFY_AVAILABILITIES,\n        payload: 'reserved'\n    }\n}\n\nexport function modifyAvailabilitesSuccess() {\n    return {\n        type: SelectionActions.MODIFY_AVAILABILITIES_SUCCESS,\n        payload: 'reserved'\n    }\n}\n\nexport function modifyAvailabilitesFailure() {\n    return {\n        type: SelectionActions.MODIFY_AVAILABILITIES_FAILURE,\n        payload: 'reserved'\n    }\n}","import { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\n\nimport './index.css';\n\nimport Header from '../Header';\nimport { fetchVenues, setSelectedVenue } from '../SeatSelection/actions';\n\nfunction MovieDetail({ selectedMovie, loading, apiError, fetchVenues, selectedVenue, allVenues, history, setSelectedVenue }) {\n    const [currentVenue, setVenue] = useState(selectedVenue);\n\n    useEffect(() => {\n        fetchVenues();\n    }, []);\n\n    const imgStyle = {\n        backgroundImage: `url(${selectedMovie.poster})`\n    }\n\n    const returnVenueStyle = (venue) => {\n        return {\n            backgroundColor: venue === currentVenue ? '#2E3147' : 'white',\n            color: venue === currentVenue ? 'white' : 'black',\n            border: venue === currentVenue ? 'none' : '1px solid #2E3147',\n        }\n    }\n\n    const onVenueSelection = (venue) => {\n        setVenue(venue);\n        setSelectedVenue(venue);\n    }\n\n    const renderVenues = () => {\n        return allVenues.map((venue) => <button key={venue} style={returnVenueStyle(venue)} onClick={() => onVenueSelection(venue)}>{venue}</button>);\n    }\n\n    const onBookSeatClick = () => {\n        history.push('/movie-ticket-booking-ui/seats');\n    }\n\n    const buttonColor = {\n        backgroundColor: currentVenue === \"\" ? \"lightgray\" : \"#006600\"\n    }\n\n    return (\n        <div>\n            <Header />\n            {loading ? <div className=\"home-msg\">Loading...</div> :\n                apiError ? <div className=\"home-msg\">An error occurred. Please try after some time.</div> :\n                    <div>\n                        <div className=\"details-tileContainer\">\n                            <div className=\"details-tileContent\" style={imgStyle} />\n                            <div className=\"details-rightDiv\">\n                                <div className=\"details-title\">{selectedMovie.title}</div>\n                                <div className=\"details-description\">{selectedMovie.actors}</div>\n                                <div className=\"details-description\">{selectedMovie.rated}</div>\n                                <div className=\"details-description\">{selectedMovie.runtime}</div>\n                                <div className=\"details-description\">{selectedMovie.plot}</div>\n                            </div>\n                        </div>\n                        <div className=\"details-selectVenueContainer\">\n                            <div className=\"details-selectVenue\">Select a movie hall</div>\n                            <div className=\"details-venuesWrapper\">\n                                {renderVenues()}\n                            </div>\n                            <button style={buttonColor} onClick={onBookSeatClick}>Book Seats</button>\n                        </div>\n\n                    </div>\n            }\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.selectionReducer.loading,\n        allMovies: state.selectionReducer.allMovies,\n        apiError: state.selectionReducer.error,\n        selectedMovie: state.selectionReducer.selectedMovie,\n        selectedVenue: state.selectionReducer.selectedVenue,\n        allVenues: state.selectionReducer.allVenues\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchVenues: () => dispatch(fetchVenues()),\n        setSelectedVenue: (data) => dispatch(setSelectedVenue(data))\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MovieDetail))\n","import { useState } from 'react';\nimport './index.css';\n\nconst seatColors = {\n    empty: \"white\",\n    selected: \"#006600\",\n    reserved: \"lightgray\",\n    locked: \"lightgray\"\n}\n\nconst Seat = (props) => {\n    const [seatStatus, setStatus] = useState(props.status);\n\n    const seatStyle = {\n        backgroundColor: seatColors[seatStatus]\n    };\n\n    const onSeatSelection = () => {\n        props.onSeatClick();\n        if (seatStatus === \"empty\") {\n            setStatus(\"selected\");\n        } else if (seatStatus === \"selected\") {\n            setStatus(\"empty\");\n        }\n    }\n\n    return (\n        <div className=\"seat\" style={seatStyle} onClick={onSeatSelection} />\n    )\n};\n\nexport default Seat;","import React, { Suspense, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\n\nimport './index.css';\n\nimport Header from '../Header';\nimport Seat from '../Seat';\nimport { fetchAvailabilities, setSelectedSeats, lockSelectedSeats, releaseSelectedSeats, bookSelectedSeats } from './actions';\n\nfunction SeatSelection({ allSeats, loading, apiError, fetchAvailabilities, setSelectedSeats, totalCost, bookSelectedSeats, lockSelectedSeats, releaseSelectedSeats, isBookingComplete }) {\n    const [isModalOpen, openModal] = useState(false);\n    const PaymentModal = React.lazy(() => import('../PaymentModal'));\n\n    useEffect(() => {\n        fetchAvailabilities();\n    }, []);\n\n    const onSeatClick = (seatNumber) => {\n        setSelectedSeats(seatNumber);\n    }\n\n    const renderSeats = () => {\n        return allSeats.map((seat) => <Seat key={seat.seat_number} {...seat} onSeatClick={() => onSeatClick(seat.seat_number)} />);\n    }\n\n    const onMakePaymentClick = () => {\n        lockSelectedSeats();\n        openModal(true);\n    }\n\n    const onPaymentModalClose = () => {\n        releaseSelectedSeats();\n        openModal(false);\n    }\n\n    const onPayClick = () => {\n        bookSelectedSeats();\n    }\n\n    const buttonColor = {\n        backgroundColor: totalCost > 0 ? \"#006600\" : \"lightgray\"\n    }\n\n    return (\n        <div>\n            {isModalOpen ?\n                <Suspense fallback={<div className=\"seatSelection-msg\">Loading...</div>}>\n                    <PaymentModal\n                        modalIsOpen={isModalOpen}\n                        closeModal={onPaymentModalClose}\n                        onPayClick={onPayClick}\n                        amount={totalCost}\n                        isLoading={loading}\n                        apiError={apiError}\n                        isBookingComplete={isBookingComplete} />\n                </Suspense>\n                : null}\n            <Header />\n            {loading ? <div className=\"seatSelection-msg\">Loading...</div> :\n                apiError ? <div className=\"seatSelection-msg\">An error occurred. Please try after some time.</div> :\n                    <div className=\"seatSelection-container\">\n                        <div className=\"seatSelection-screen\">Screen this way!</div>\n                        <div className=\"seatSelection-seatsParent\">\n                            {renderSeats()}\n                        </div>\n                        <div className=\"seatSelection-sampleSeats\">\n                            <div className=\"seatSelection-sampleSeatWrapper\">\n                                <Seat status=\"empty\" /> Available\n                            </div>\n                            <div className=\"seatSelection-sampleSeatWrapper\">\n                                <Seat status=\"reserved\" /> Unavailable\n                            </div>\n                            <div className=\"seatSelection-sampleSeatWrapper\">\n                                <Seat status=\"selected\" /> Selected\n                            </div>\n                        </div>\n                        <div className=\"seatSelection-cost\">\n                            Total Price: {totalCost}\n                        </div>\n                        <button style={buttonColor} onClick={onMakePaymentClick} disabled={totalCost === 0}>Make Payment</button>\n                    </div>\n            }\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        allSeats: state.selectionReducer.allSeats,\n        selectedSeats: state.selectionReducer.selectedSeats,\n        loading: state.selectionReducer.loading,\n        apiError: state.selectionReducer.error,\n        totalCost: state.selectionReducer.totalCost,\n        isBookingComplete: state.selectionReducer.isBookingComplete\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchAvailabilities: () => dispatch(fetchAvailabilities()),\n        setSelectedSeats: (data) => dispatch(setSelectedSeats(data)),\n        lockSelectedSeats: () => dispatch(lockSelectedSeats()),\n        releaseSelectedSeats: () => dispatch(releaseSelectedSeats()),\n        bookSelectedSeats: () => dispatch(bookSelectedSeats())\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SeatSelection))\n","import { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Home from '../components/Home';\nimport MovieDetail from '../components/MovieDetail';\nimport SeatSelection from '../components/SeatSelection';\n\nexport const Routes = () => (\n    <Router>\n        <Route exact path='/movie-ticket-booking-ui/'>\n            <Home />\n        </Route>\n        <Route exact path='/movie-ticket-booking-ui/details'>\n            <MovieDetail />\n        </Route>\n        <Route exact path='/movie-ticket-booking-ui/seats'>\n            <SeatSelection />\n        </Route>\n    </Router>\n)","import HomeActions from './actions.types';\n\nconst initialState = {\n    loading: true,\n    error: false,\n    allMovies: [],\n};\n\nexport default function homeReducer(state = initialState, action) {\n    switch (action.type) {\n        case HomeActions.FETCH_MOVIES:\n            return {\n                ...state,\n                loading: true\n            }\n        case HomeActions.FETCH_MOVIES_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                allMovies: action.payload\n            }\n        case HomeActions.FETCH_MOVIES_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                error: true\n            }\n        default:\n            return initialState\n    }\n}","import SelectionActions from './actions.types';\n\nconst initialState = {\n    loading: true,\n    error: false,\n    allSeats: [],\n    allVenues: [],\n    selectedMovie: {},\n    selectedVenue: \"\",\n    selectedSeats: [],\n    totalCost: 0,\n    isBookingComplete: false\n};\n\nexport default function selectionReducer(state = initialState, action) {\n    switch (action.type) {\n        case SelectionActions.SET_SELECTED_MOVIE:\n            return {\n                ...state,\n                selectedMovie: action.payload\n            }\n        case SelectionActions.SET_SELECTED_VENUE:\n            return {\n                ...state,\n                selectedVenue: action.payload\n            }\n        case SelectionActions.SET_SELECTED_SEATS:\n            const { selectedSeats, allSeats } = state;\n            const newSeatsArray = state.selectedSeats;\n            if (newSeatsArray.includes(action.payload)) {\n                newSeatsArray.splice(newSeatsArray.indexOf(action.payload), 1);\n            } else {\n                newSeatsArray.push(action.payload);\n            }\n            const newCost = selectedSeats.length * allSeats[0].cost;\n\n            return {\n                ...state,\n                selectedSeats: newSeatsArray,\n                totalCost: newCost\n            }\n        case SelectionActions.FETCH_VENUES:\n            return {\n                ...state,\n                loading: true\n            }\n        case SelectionActions.FETCH_VENUES_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                allVenues: action.payload\n            }\n        case SelectionActions.FETCH_VENUES_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                error: true\n            }\n        case SelectionActions.FETCH_AVAILABILITIES:\n            return {\n                ...state,\n                loading: true\n            }\n        case SelectionActions.FETCH_AVAILABILITIES_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                allSeats: action.payload\n            }\n        case SelectionActions.FETCH_AVAILABILITIES_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                error: true\n            }\n        case SelectionActions.MODIFY_AVAILABILITIES:\n            return {\n                ...state,\n                loading: true\n            }\n        case SelectionActions.MODIFY_AVAILABILITIES_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isBookingComplete: action.payload.seatStatus === 'reserved',\n                totalCost: action.payload.seatStatus === 'empty' ? 0 : state.totalCost,\n                selectedSeats: action.payload.seatStatus === 'empty' ? [] : state.selectedSeats,\n            }\n        case SelectionActions.MODIFY_AVAILABILITIES_FAILURE:\n            return {\n                ...state,\n                loading: false,\n                error: true\n            }\n        default:\n            return initialState\n    }\n}","import { combineReducers } from 'redux';\nimport homeReducer from './components/Home/reducer';\nimport selectionReducer from './components/SeatSelection/reducer';\n\nconst mainReducer = combineReducers({\n    homeReducer: homeReducer,\n    selectionReducer: selectionReducer,\n});\n\nexport default mainReducer","export const BASE_URL = 'ec2-18-217-212-15.us-east-2.compute.amazonaws.com:4000/movie-ticket-booking';","import { put, takeEvery } from 'redux-saga/effects';\n\nimport HomeActions from './actions.types';\nimport { BASE_URL } from '../../constants';\n\nfunction* fetchMovies() {\n    try {\n        const apiResult = yield fetch(`${BASE_URL}/get-movies`).then(res => res.json());\n        yield put({\n            type: HomeActions.FETCH_MOVIES_SUCCESS, payload: apiResult\n        });\n    } catch (err) {\n        yield put({\n            type: HomeActions.FETCH_MOVIES_FAILURE, payload: err\n        });\n    }\n}\n\nexport default function* homeSaga() {\n    yield takeEvery(HomeActions.FETCH_MOVIES, fetchMovies);\n}","import { put, takeEvery, select } from 'redux-saga/effects';\n\nimport SelectionActions from './actions.types';\nimport { BASE_URL } from '../../constants';\n\nfunction* fetchVenues() {\n    try {\n        const apiResult = yield fetch(`${BASE_URL}/get-venues`).then(res => res.json());\n        yield put({\n            type: SelectionActions.FETCH_VENUES_SUCCESS, payload: apiResult\n        });\n    } catch (err) {\n        yield put({\n            type: SelectionActions.FETCH_VENUES_FAILURE, payload: err\n        });\n    }\n}\n\nfunction* fetchAvailabilities() {\n    try {\n        let movieId = yield select((state) => state.selectionReducer.selectedMovie.movie_id);\n        let venue = yield select((state) => state.selectionReducer.selectedVenue);\n        const apiResult = yield fetch(`${BASE_URL}/get-availability/${movieId}/${venue}`).then(res => res.json());\n        yield put({\n            type: SelectionActions.FETCH_AVAILABILITIES_SUCCESS, payload: apiResult\n        });\n    } catch (err) {\n        yield put({\n            type: SelectionActions.FETCH_AVAILABILITIES_FAILURE, payload: err\n        });\n    }\n}\n\nfunction* modifyAvailabilities(action) {\n    try {\n        let movieId = yield select((state) => state.selectionReducer.selectedMovie.movie_id);\n        let venue = yield select((state) => state.selectionReducer.selectedVenue);\n        let selectedSeats = yield select((state) => state.selectionReducer.selectedSeats);\n        let reqBody = {\n            movieId: movieId,\n            venueName: venue,\n            seatNumbers: selectedSeats,\n            newStatus: action.payload\n        };\n        reqBody = JSON.stringify(reqBody);\n\n        const apiResult = yield fetch(`${BASE_URL}/set-availability`, {\n            method: 'PUT',\n            headers: {\n                'Content-type': 'application/json; charset=UTF-8'\n            },\n            body: reqBody\n        }).then(res => res.json());\n        yield put({\n            type: SelectionActions.MODIFY_AVAILABILITIES_SUCCESS, payload: { result: apiResult, seatStatus: action.payload }\n        });\n    } catch (err) {\n        yield put({\n            type: SelectionActions.MODIFY_AVAILABILITIES_FAILURE, payload: err\n        });\n    }\n}\n\nexport default function* homeSaga() {\n    yield takeEvery(SelectionActions.FETCH_VENUES, fetchVenues);\n    yield takeEvery(SelectionActions.FETCH_AVAILABILITIES, fetchAvailabilities);\n    yield takeEvery(SelectionActions.MODIFY_AVAILABILITIES, modifyAvailabilities);\n}","import { all } from 'redux-saga/effects';\nimport homeSaga from './components/Home/saga';\nimport selectionSaga from './components/SeatSelection/saga';\n\nexport default function* rootSaga() {\n    yield all([homeSaga(), selectionSaga()]);\n}","import React, { Component } from 'react';\nimport { Routes } from './routes';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga'\nimport mainReducer from './mainReducer';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(mainReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Routes />\n      </Provider>\n    );\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}