{"version":3,"sources":["components/PaymentModal/index.js"],"names":["PaymentModal","props","paymentTimeout","useState","cardNumber","setCardNumber","secondsLeft","setSecondsLeft","modalIsOpen","closeModal","amount","isLoading","apiError","onPayClick","isBookingComplete","useEffect","setInterval","onCancelButtonClick","clearInterval","payButtonStyle","backgroundColor","length","isOpen","onRequestClose","className","overlayClassName","ariaHideApp","placeholder","maxLength","size","onChange","e","target","value","style","disabled","onClick"],"mappings":"sNAoFeA,UA/EM,SAACC,GAAW,IAKzBC,EALwB,EACQC,mBAAS,IADjB,mBACrBC,EADqB,KACTC,EADS,OAEUF,mBAAS,KAFnB,mBAErBG,EAFqB,KAERC,EAFQ,KAGpBC,EAAwFP,EAAxFO,YAAaC,EAA2ER,EAA3EQ,WAAYC,EAA+DT,EAA/DS,OAAQC,EAAuDV,EAAvDU,UAAWC,EAA4CX,EAA5CW,SAAUC,EAAkCZ,EAAlCY,WAAYC,EAAsBb,EAAtBa,kBAI1EC,qBAAU,WACN,IAAIT,EAAc,IAClBJ,EAAiBc,aAAY,WACzBV,IACAC,EAAeD,EAAc,GAET,IAAhBA,GACAW,MAEL,OACJ,IAEH,IAIMA,EAAsB,WACxBC,cAAchB,GACdO,KAQEU,EAAiB,CACnBC,gBAAuC,KAAtBhB,EAAWiB,OAAgB,UAAY,aAG5D,OACI,cAAC,IAAD,CACIC,OAAQd,EACRe,eAAgBd,EAChBe,UAAU,QACVC,iBAAiB,UACjBC,aAAa,EALjB,SAOI,sBAAKF,UAAU,iBAAf,UACMV,EAEI,KADF,uDAEFA,EAEI,KADF,sDAAyBJ,KAE5BC,EAAY,qBAAKa,UAAU,oBAAf,wBACTZ,EAAW,qBAAKY,UAAU,oBAAf,4DACPV,EAAoB,qBAAKU,UAAU,mBAAf,uCAChB,qCAAE,+DAAkClB,EAAlC,uDACE,uBAAOqB,YAAY,oBAAoBC,UAAU,KAAKC,KAAK,KAAKC,SArClE,SAACC,GACvB1B,EAAc0B,EAAEC,OAAOC,aAqCbnB,EAOI,KANF,wBACIoB,MAAOf,EACPgB,SAAgC,KAAtB/B,EAAWiB,QAAiBV,EACtCyB,QAjCK,WACrBlB,cAAchB,GACdW,KA4BY,iBAOFC,EAOI,KANF,wBACIU,UAAU,qBACVW,SAAUxB,EACVyB,QAASnB,EAHb","file":"static/js/4.3f4fa959.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\n\nimport './index.css';\n\nconst PaymentModal = (props) => {\n    const [cardNumber, setCardNumber] = useState(\"\");\n    const [secondsLeft, setSecondsLeft] = useState(60 * 3);\n    const { modalIsOpen, closeModal, amount, isLoading, apiError, onPayClick, isBookingComplete } = props;\n\n    var paymentTimeout;\n\n    useEffect(() => {\n        var secondsLeft = 180;\n        paymentTimeout = setInterval(() => {\n            secondsLeft--;\n            setSecondsLeft(secondsLeft - 1);\n\n            if (secondsLeft === 0) {\n                onCancelButtonClick();\n            }\n        }, 1000);\n    }, []);\n\n    const onCardNumberInput = (e) => {\n        setCardNumber(e.target.value);\n    }\n\n    const onCancelButtonClick = () => {\n        clearInterval(paymentTimeout);\n        closeModal();\n    }\n\n    const onPayButtonClick = () => {\n        clearInterval(paymentTimeout);\n        onPayClick();\n    }\n\n    const payButtonStyle = {\n        backgroundColor: cardNumber.length === 16 ? \"#006600\" : \"lightgray\"\n    }\n\n    return (\n        <Modal\n            isOpen={modalIsOpen}\n            onRequestClose={closeModal}\n            className=\"Modal\"\n            overlayClassName=\"Overlay\"\n            ariaHideApp={false}\n        >\n            <div className=\"modal-contents\">\n                {!isBookingComplete ?\n                    <h2>Complete your payment</h2>\n                    : null}\n                {!isBookingComplete ?\n                    <div>Amount to be paid: {amount}</div>\n                    : null}\n                {isLoading ? <div className=\"seatSelection-msg\">Loading...</div> :\n                    apiError ? <div className=\"seatSelection-msg\">An error occurred. Please try after some time.</div> :\n                        isBookingComplete ? <div className=\"modal-successMsg\">Booking done successfully</div> :\n                            <><div>We will hold your seats for {secondsLeft} seconds, after which the seats will be released.</div>\n                                <input placeholder=\"Enter card number\" maxLength=\"16\" size=\"16\" onChange={onCardNumberInput} /></>}\n                {!isBookingComplete ?\n                    <button\n                        style={payButtonStyle}\n                        disabled={cardNumber.length !== 16 || isLoading}\n                        onClick={onPayButtonClick}>\n                        Pay\n                    </button>\n                    : null}\n                {!isBookingComplete ?\n                    <button\n                        className=\"modal-cancelButton\"\n                        disabled={isLoading}\n                        onClick={onCancelButtonClick}>\n                        Cancel\n                    </button>\n                    : null}\n            </div>\n\n        </Modal>\n    )\n};\n\nexport default PaymentModal;"],"sourceRoot":""}